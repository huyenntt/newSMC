args "--unamed-opts=FILES --include-getopt --show-required --no-handle-error --conf-parser"

package "petri"
purpose "A command-line frontend for the Petri Net API"


section "Input and Output"

option "input" i
  "Select the input file format"
  typestr="FORMAT"
  values="owfn","lola","pnml","sa","tpn" enum
  optional
  default="owfn"

option "output" o
  "Select the output file format(s)"
  typestr="FORMAT"
  values="owfn","lola","pnml","sa","tpn","dot","png","pdf","eps","svg" enum
  optional
  multiple

option "canonicalNames" -
  "Renames nodes to avoid problems with conversion to other formats. Mapping may be written to a given file."
  string
  typestr="FILENAME"
  optional
  argoptional
  
option "formula" f
  "Places a final condition at the end of LoLA files. Has no effect to other output formats."
  flag off

option "removePorts" -
  "Removes ports in output files."
  flag off

option "guessFormula" -
  "Derive the final condition from the structure (i.e., the sink place) of the net."
  flag off

defgroup "Automaton Converter"
  groupdesc="Defining a program, to convert Service Automata to Petri Nets"

groupoption "genet" -
  "Use Genet; specify the path"
  string
  group="Automaton Converter"
  typestr="FILENAME"
  default="genet"
  argoptional

groupoption "petrify" -
  "Use Petrify; specify the path"
  string
  group="Automaton Converter"
  typestr="FILENAME"
  default="petrify"
  argoptional


section "Composition and Product"

option "compose" -
  "Compose each net given in the input section with this net."
  typestr="NET"
  string
  optional

option "produce" -
  "Calculate the product."
  typestr="CONSTRAINT"
  string
  optional

section "Check for Structural Properties"

option "isFreeChoice" -
  "Check if the Petri net is free choice, i.e. if conflicting transitions share all pre-places."
  flag off

option "isNormal" -
  "Check if the Petri net is normal, i.e. every transition is connect to at most one interface place."
  flag off

option "isWorkflow" -
  "Check if the Petri net has workflow structure, i.e. it (i) has a distinct source place, (ii) has a district sink place, and (iii) every node lays on a path between the source place and the sink place."
  flag off

option "check" c
  "Check a structural property of the Petri net, see `isFreeChoice', `isNormal', and `isWorkflow' for details."
  typestr="PROPERTY"
  values="freechoice","normal","workflow" enum
  optional
  hidden


section "Modifications"

option "reduce" r
  "Apply structural reduction rules, i.e. reduce the structure of the net while preserving liveness and boundedness."
  typestr="RULES"
  values="0","1","2","3","4","5","6","starke","pillat","dead_nodes","identical_places","identical_transitions","series_places","series_transitions","self_loop_places","self_loop_transitions","equal_places","starke3p","starke3t","starke4","starke5","starke6","starke7","starke8","starke9","once","k_boundedness","boundedness","liveness" enum
  optional
  multiple

option "normalize" n
  "Normalize the Petri net, i.e. change to structure such that every transition is connected to at most one interface place."
  flag off

option "negate" N
  "Negate the final condition of the net, i.e. every specified final marking is now non-final. The result is the 'anti open net'."
  flag off

option "mirror" M
  "Mirror the interface, i.e. change the direction of communication"
  flag off

option "dnf" -
  "Convert final condition to disjunctive normal form"
  flag off


section "Configuration"

option "config" -
  "Read configuration from file."
  details="If no file is given, Petri first tries to parse file `petri.conf' from the sysconf directory (usually `/usr/local/etc'; written in case Petri was installed) and then from the current working directory. If neither file was found, the standard values are assumed.\n"
  string
  typestr="FILE"
  optional

option "dot" -
  "Set the path an binary of dot."
  string
  typestr="FILENAME"
  default="dot"
  optional
  hidden

option "tmpfile" -
  "Set the path and name of temporary files"
  details="The filename Petri should use to create temporary files. The filename should end with `XXXXXX' which is replaced at runtime with a random string.\n"
  string
  typestr="FILENAME"
  default="/tmp/petri-XXXXXX"
  optional
  hidden

option "noClean" -
  "Do not delete temporary files."
  details="Any temporary files created by Petri is kept after Petri terminates.\n"
  flag off


section "Debugging"

option "verbose" v
  "Show verbose output"
  flag off

option "suffix_owfn" -
  "Suffix for open net files"
  typestr="SUFFIX"
  string
  multiple
  optional
  hidden

option "suffix_sa" -
  "Suffix for service automaton files"
  typestr="SUFFIX"
  string
  multiple
  optional
  hidden

option "stats" -
  "Display time and memory consumption on termination."
  details="The time is measured using the function clock(3). The memory usage is measured using the ps(1) command. Note that memory consumption contains a small overhead.\n"
  flag off
  hidden

